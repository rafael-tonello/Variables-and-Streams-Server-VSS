{
	"StorageStructureExample":{
		"var": {
			"Home": {
				"GlobalObservers":[
					"sk_23423"
				],
				"Garden":{
					"Pump1": {
						"type":"('var' or 'alias'. If alias, recursive set to pointed var, especified in value)",
						"value":"",
						"observers":[
							"sk_1983",
							"sk_92838"
						]
					},
					"Light1":{
						"state":{
							"type":"(var or alias. If alias, recursive set to pointed var, especified in value)",
							"value":"",
							"observers":[]
						},
						"currValue":{
							"type":"(var or alias. If alias, recursive set to pointed var, especified in value)",
							"value":"",
							"observers":[]
						}
					}
				},
				"House":{}
			}
		}
	},
	"Description":[
		"",
		"",
		"var.home.garden.pump1",
		"",
		"",
		"//seting and garden pump1 which repond when command is intended",
		"",
		"setvar(\"var.home.garden.pumpN.comandOk\", 0);",
		"observateVar(\"var.home.garden.pumpN.comandOk\", function(value){",
		"    if (value == 1)",
		"    {",
		"        alert(\"The pump is working now\");",
		"    }",
		"}",
		"",
		"setVar(\"var.home.garden.pumpN.state\", 1);",
		"",
		"",
		"  app                    comsys                   pump",
		"  |                         |  observate pump state |" ,
		"  |                         |<----------------------+" ,
		"  |                      +--|                       |" ,
		"  |     add pump state   |  |                       |" ,
		"  |     observer         +->|  response OK          |" ,
		"  |                         +---------------------->|" ,
		"  |                         |                       |" ,
		"  |  set comandOk = 0       |                       |" ,
		"  +------------------------>|--+                    |" ,
		"  |                         |  | set the var        |" ,
		"  |     response OK         |<-+                    |" ,
		"  |<------------------------+                       |" ,
		"  |                         |                       |" ,
		"  |  observate comandOk     |                       |" ,
		"  +------------------------>|--+                    |" ,
		"  |                         |  | add observer       |" ,
		"  |     response OK         |<-+                    |" ,
		"  |<------------------------+                       |" ,
		"  |                         |                       |" ,
		"  |     set state = 1       |                       |" ,
		"  +------------------------>| not. state observers  |" ,
		"  |                         +---------------------->|--+",
		"  |                         |                       |  | Turn on pump",
		"  |                         |  set comandOk = 1     |<-+ and work",
		"  | Nt. comandOk observers  |<----------------------+",
		"  |<------------------------+                       |",
		"  |                         |                       |",
		"  |                         |                       |",
		"  ",
		"  ",
		"  //==============================================================",
		"  ",
		"  Other form to do this is using complementar bool system",
		"  1 -> set value",
		"  11 -> value has seted by destinity",
		"  0 -> disable",
		"  10 -> disabled",
		"  2 -> timed operation mode",
		"  12 -> operating em timed mode",
		"  3 -> learning mode",
		"  13 -> learning",
		"  4 -> operate with learned data",
		"  14 -> operationg with learned data",
		"  ",
		" app                     comsys                   pump",
		"  |                         |  observate pump state |",
		"  |                         |<----------------------+",
		"  |                      +--|                       |",
		"  |     add pump state   |  |                       |",
		"  |     observer         +->|  response OK          |",
		"  |                         +---------------------->|",
		"  |                         |                       |",
		"  |  observate pump state   |                       |",
		"  +------------------------>|--+                    |",
		"  |                         |  | add observer       |",
		"  |     response OK         |<-+                    |",
		"  |<------------------------+                       |",
		"  |                         |                       |",
		"  |                         |                       |",
		"  |                         |                       |",
		"  |     set state = 1       |                       |",
		"  +------------------------>|                       |",
		"  |                         |                       |",
		"  |  not. state observers   | not. state observers  |",
		"  |<------------------------+---------------------->|--+",
		"  |                         |                       |  | Turn on pump",
		"  |                         |  set state = 11       |<-+ and work",
		"  | Nt. comandOk observers  |<----------------------+",
		"  |                         |                       |",
		"  |  not. state observers   |  not. state observers |",
		"  |<------------------------+---------------------->|",
		"  |                         |                       |",
		"  |                         |                       |"
	],
	"TheProtocols":{
		"BasicContainer":{
			"Description":"The basic struct used for transfer the data of encapsulated protocols. When a device not reconitize some protocol, they can skeep the data using the DataSize field.",
			"Fields":{
				"FieldSTX":{
					"Description":"Byte indicating a frame start",
					"Size":"1 byte",
					"Value":"0x02"
				},
				"FieldProtocolType":{
					"Description":"This fields indentifies the subprotocol (inside a data field)",
					"Size":"1 byte",
					"Values":[
						{
							"Value":"0x02",
							"ProtocolName":"PHOMAU",
							"Description":"Protocol to set variables and call function between devices in home automatation"
						}
					]
				},
				"FieldDataSize1":{
					"Description":"The size of data field. The most significant bytes are in the beginning",
					"Size":"4 bytes. UInt32"
				},
				"FieldDataSize2":{
					"Description":"The size of data field. The most significant bytes are in the ending",
					"Size":"4 bytes. UInt32"
				},
				"FieldData":{
					"Description":"Contains the data of subprotocol",
					"Size":"[FieldDataSize] byte"
				},
				"Crc":{
					"Description":"Field used to verify the integrity of pack. The algorithm is specified in https://en.wikipedia.org/wiki/Cyclic_redundancy_check.",
					"Size":"2bytes"
				}
			}
		},
		"Subprotocols":{
			"PHOMAU":{
				"Description":[
					"This protocol contains a function call from one device to another. It consists basically of a function and some parameters (according to function)",
					"",
					"Aliases",
					"",
					"",
					"        +-------------------------------------------+            ",
					"        |                                           |            ",
					"      \\ /                                          |             ",
					"        '                                           |             ",
					"       /\\                                          |             ",
					"     /    \\                                        |             ",
					"   /        \\  yes                   +--------------------------+",
					" <    is an   > --------------------->|   find the pointed var   |",
					"   \\ alias? /                        +--------------------------+",
					"     \\    /                                                      ",
					"       \\/                                                        ",
					"        |no                                                       ",
					"        |                                                         ",
					"        |                                                         ",
					"      \\ /                                                        ",
					"        '                                                         ",
					"+--------------+                                                  ",
					"|  Set the var |                                                  ",
					"+--------------+                                                  "
				],
				"Fields":{
					"Command":{
						"Description":"The remote command to be executed. The command list is described in \"Commands\", most bellow.",
						"Size":"1 byte"
					},
					"Data":{
						"Description":"Contans the command arguments",
						"Size":"restant bytes"
					}
				},

				"Commands":{
					"Acknowlege":{
						"Description":"Response form any command. Indicates that the remote sytem receives the command.",
						"Value":"0x01",
						"Arguments":"1 byte with value 1 (indicating sucess) or 0 (indicating falure) and an string with some message. The string is not required"
					},
					"Empty1":{
						"Description":"------------------------",
						"Value":"0x02"
					},
					"Empty2":{
						"Description":"------------------------",
						"Value":"0x03"
					},
					"Empty3":{
						"Description":"------------------------",
						"Value":"0x04"
					},
					"Empty4":{
						"Description":"------------------------",
						"Value":"0x05"
					},
					"Empty5":{
						"Description":"------------------------",
						"Value":"0x06"
					},
					"Empty6":{
						"Description":"------------------------",
						"Value":"0x07"
					},
					"Empty7":{
						"Description":"------------------------",
						"Value":"0x08"
					},
					"Empty8":{
						"Description":"------------------------",
						"Value":"0x09"
					},
					"SetVar":{
						"Description":"This command is used to set an var on remote system.",
						"Value":"0x0A",
						"Arguments":"The 'Data' field contains an csv key-value pair (varname=value)"
					},
					"GetVar":{
						"Description":"This command is used to get an var from remote system.",
						"Value":"0x0B",
						"Arguments":"The 'Data' field contains an string with var name"
					},
					"ObserveVar":{
						"Description":"Requests to remote system that any change in an determined variable must be notificated to requester system.",
						"Value":"0x0C",
						"Arguments":"The 'Data' field contains an string with var name"
					},
					"StopObserveVar":{
						"Description":"Asks the remote system that changes to a given variable should not be notified to the requesting system.",
						"Value":"0x0D",
						"Arguments":"The 'Data' field contains an string with var name"
					},
					"VarChanged":{
						"Description":"Sented by an device to observers to indicate that an variable as changed. NOTE: This event will not be sent when a variable is append.",
						"Value":"0x0E",
						"Arguments":"An key-value pair containing the varname, '=' char and the new var value (varname=newValue)"
					},
					"CreateAlias":{
						"Description":"Create a alias to an variable. It alias already exists, them are be rewrited",
						"Value":"0x0F",
						"Arguments": "A key-value pair contains the alias name, a equals char and a original variable name (alias=varname)."
					},
					"GetAliasValue":{
						"Description":"Return the name of varibale pointed by alias",
						"Value":"0x10",
						"Arguments": "A string contains the alias name."
					},
					"RemoveAlias":{
						"Description":"Remove a alias to an variable",
						"Value":"0x11",
						"Arguments": "A string contains the alias name."
					},
					"KeepAlive":{
						"Description":"Send to server to inform this that the requester is till connected",
						"Value":"0x12"
					},
					"Empty9":{
						"Description":"------------------------",
						"Value":"0x13"
					},
					"Empty10":{
						"Description":"------------------------",
						"Value":"0x14"
					},
					"AppendVar":{
						"Description":"Append data to var",
						"Value":"0x15",
						"Arguments":"The 'Data' field containing a csv key-value pair (varname=value). Varname is the name of variable and value is the data to be added to variable"
					},
					"Response_of_GetVar":{
						"Description":"The response of GetVar command",
						"Value":"0x16",
						"Arguments":"The value of variable"
					},
					"GetChilds":{
						"Description":"Return childs variables of a parent. Subchilds are not returned",
						"Value":"0x17",
						"Arguments": "A string with parent name."
					},
					"Response_of_GetChilds":{
						"Description":"Return a csv (separator is ',') with a childs names of an variable. This command is a respose of GetChilds (0x13)",
						"Value":"0x18",
						"Arguments": "A csv with childsnames."
					},
					"GetVarSize":{
						"Description":"return the size of a variable. The size is is bytes",
						"Value":"0x19",
						"Arguments": "the variable name"
					},
					"Response_of_GetVarSize":{
						"Description":"A human readable string with size of variable informed in the 'GetVarSize' command",
						"Value":"0x1A",
						"Arguments": "a string (human readable) with size of the variable, in bytes"
					},
					"GetVarSize_bin":{
						"Description":"return the size of a variable. The size is is bytes",
						"Value":"0x1B",
						"Arguments": "the variable name"
					},
					"Response_of_GetVarSize_bin":{
						"Description":"for bytes (an unsigned int32) with the size of variable informed in the 'GetVarSize_Bin' command",
						"Value":"0x1C",
						"Arguments": "4 bytes (uint32) with the variable name"
					},
					"VarAppended":{
						"Description":"Sent to obervers when data is appended to a variable.",
						"Value":"0x1D",
						"Arguments": "The data that was appended to variables"
					}
				}
			}
		}
	}
}